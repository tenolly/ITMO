@startuml
package creature.properties {
    interface Existence {
        public Existence getLocation()
        public void setLocation(Existence location)
    }
}

package creature {
    package properties {
        interface CanCall {
            + void call(Phone phone, Human human, Location location)
        }

        interface Moveable {
            + void move(Location location)
        }

        interface UnderstandText {
            + void read(Readable obj)
        }

        interface Conscious {
            + void mind(String thought)
        }
    }

    class Human {
        - String name
        - Existence currentLocation
        + Human(String name)
        + Human(String name, Existence currentLocation)
        + Existence getLocation()
        + void setLocation(Existence location)
        + String read(Readable obj)
        + void mind(String thought)
        + void move(Existence location)
        + void call(Phone phone, Human human, Location location)
        + String toString()
        + int hashCode()
        + boolean equals(Object obj)
    }

    UnderstandText <|-- Human
    Conscious <|-- Human
    Moveable <|-- Human
    CanCall <|-- Human
    Existence <|-- Human
}

package locations.base {
    abstract class Location {
        {abstract} void add(Human obj)
        {abstract} void remove(Human obj)
    }

    class Building {
        - ArrayList<Human> peopleInside
        + void add(Human human)
        + void remove(Human human)
        + String toString()
        + int hashCode()
        + boolean equals(Object obj)
    }

    Location <|-- Building
    Existence <|-- Location
}

package buisness {
    class Company {
        # Worker owner
        - ArrayList<Worker> stuff
        - ArrayList<Equipment> equipments
        + Company(String name, Worker owner)
        + Worker getOwner()
        + void add(Worker worker)
        + void remove(Worker worker)
        + void add(Equipment equipment)
        + void remove(Equipment equipment)
    }

    Building <|-- Company

    package problems {
        class notEnoughMoneyException {
            + notEnoughMoneyException()
            + notEnoughMoneyException(String message)
        }
    }

    package materials {
        class Equipment {
            - Human owner
            + String name;
            + Existence currentLocation;
            + Equipment(Human owner)
            + Human getOwner()
            + Existence getLocation()
            + void setLocation(Existence location)
            + String toString()
            + int hashCode()
            + boolean equals(Object obj)
        }

        Existence <|-- Equipment
    }

    package stuff {
        enum Job {
            Owner
            Editor
            Typist
        }

        class Worker {
            - Job job;
            - int budget;
            + Worker(String name, Job job, int budget)
            + Job getJob()
            + int getBudget()
            + void setBudget(int budget)
            + void changeBudget(int budget)
        }

        Human <|-- Worker
    }
}

package locations {
    class Bank {
        + Bank(String name, Worker owner)
    }
    
    class NewspaperEditoring {
        - int countPapers
        + NewspaperEditoring(String name, Worker owner)
        + void makePapers(int cost)
        + void sellPapers(int cost)
        + void paidSalary(Worker worker, int money)
        + String getProfit()
    }

    class FinanceMenagment {
        - int spent
        - int earned
        + FinanceMenagment()
        + FinanceMenagment(int spent, int earned)
        + void spendMoney(int money)
        + void earnMoney(int money)
        + String getProfit()
    }
    
    NewspaperEditoring -> FinanceMenagment

    Company <|-- Bank
    Company <|-- NewspaperEditoring
}

package things {
    package properties {
        interface Readable {
            + String getText()
        }
    }

    class Car {
        - String name
        - Existence currentLocation
        + Car(String name)
        + Car(String name, Existence currentLocation)
        + Existence getLocation()
        + void setLocation(Existence location)
        + void move(Existence location)
        + String toString()
        + int hashCode()
        + boolean equals(Object obj)
    }

    Existence <|-- Car
    Moveable <|-- Car

    class Phone {
        - String name;
        - Existence currentLocation;
        + Phone(String name)
        + Phone(String name, Existence currentLocation)
        + Existence getLocation()
        + void setLocation(Existence location)
        + String toString()
        + int hashCode()
        + boolean equals(Object obj)
    }

    Existence <|-- Phone

    class Telegram {
        - String name
        - String text
        - Existence currentLocation
        + Telegram(String name, String text)
        + Telegram(String name, String text, Existence currentLocation)
        + String getText()
        + Existence getLocation()
        + void setLocation(Existence location)
        + String toString()
        + int hashCode()
        + boolean equals(Object obj)
    }

    Readable <|-- Telegram
    Existence <|-- Telegram

    class Paper {
        - ArrayList<Existence> story
        - HashMap<Existence, Advertisement>
        - String name
        - Existence currentLocation
        + Paper(String name, String text)
        + Paper(String name, String text, Existence currentLocation)
        + addObject(Existence object)
        + String getText()
        + Existence getLocation()
        + void setLocation(Existence location)
        + String toString()
        + int hashCode()
        + boolean equals(Object obj)
    }

    Readable <|-- Paper
    Existence <|-- Paper

    class Advertisement {
        - String text
        + Advertisement()
        + Advertisement(String text)
    }
}
@endum