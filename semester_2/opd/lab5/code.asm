ORG		0x4CA		    ; адрес начала программы

STOP: 	WORD	0x0D	; стоп-символ
RES:	WORD	0x56A	; адрес текущего адреса строки
TEMP:   WORD    ?       ; сохрание символов

START:	CLA				; очистка аккумулятора

S1:	IN 7		        ; ожидание ввода символа
	AND #0x40	        ; проверка на наличие ввода
	BEQ S1	            ; нет - "спин-луп"
	IN 6		        ; вывод байта в аккумулятор
	ST (RES)	        ; cохраняем символ в результат (косвенная ссылка)
	ST TEMP	            ; сохраняем символ во временную переменную
	CMP STOP	        ; проверяем на стоп-символ
	BEQ EXIT	        ; eсли стоп-символ - выход
	CLA		            ; очистка аккумулятора

S2:	IN 7		        ; ожидание ввода символа
	AND #0x40	        ; проверка на наличие ввода
	BEQ S2	            ; нет - "спин-луп"
	IN 6		        ; вывод байта в аккумулятор
	SWAB		        ; перемещаем символ в старший байт
	OR TEMP	            ; добавляем сюда предыдущий символ (АДРЕС: СИМВЛ2, СИМВЛ1)
	ST (RES)+	        ; сохраняем в строку (инкрементируя адрес)
	SUB TEMP			; очищаем от ненужных данных
	SWAB		        ; Перемещаем символ в младший байт
	CMP STOP	        ; проверяем на стоп-символ
	BEQ EXIT	        ; eсли стоп-символ - выход
	CLA		            ; очистка аккумулятора
	JUMP S1	            ; возвращаемся в начало цикла

EXIT:	HLT
