@startuml

package commands {
    package core {
        class Argument<T> {
            - String name
            - String decription
            - T value
            - Function<String, T> castToType
            + Argument(String name, String decription, Function<String, T> castToType)
            + void setValue(String value)
            + T getValue() 
            + String getName()
            + String getDescription()
        }

        abstract class Command {
            - String name
            - String description
            # Context context
            # ArrayList<Argument<?>> arguments
            + Command(String name, String description)
            + Command setContext(Context context)
            + String getName()
            + String getDescription()
            {abstract} + ArrayList<String> execute()
        }

        class Context {
            - Enviroment enviroment
            - ArrayList<Argument<?>> args
            + Context(Enviroment enviroment)
            + Enviroment getEnviroment()
            + void setArgs(ArrayList<Argument<?>> args)
            + HashMap<String, Object> readArguments()
            + HashMap<String, Object> readArgument(String alias)
        }

        class TerminateException {}
    }

    class Add {
        + Add(String name, String description)
        + ArrayList<String> execute()
    }

    class Clear {
        + Clear(String name, String description)
        + ArrayList<String> execute()
    }

    class CountLessThanEnginePower {
        + CountLessThanEnginePower(String name, String description)
        + ArrayList<String> execute()
    }

    class ExecuteScript {
        + ExecuteScript(String name, String description)
        + ArrayList<String> execute()
    }

    class Exit {
        + Exit(String name, String description)
        + ArrayList<String> execute()
    }

    class FilterGreaterThanFuelConsumption {
        + FilterGreaterThanFuelConsumption(String name, String description)
        + ArrayList<String> execute()
    }

    class FilterStartsWithName {
        + FilterStartsWithName(String name, String description)
        + ArrayList<String> execute()
    }

    class Help {
        + Help(String name, String description)
        + ArrayList<String> execute()
    }

    class Info {
        + Info(String name, String description)
        + ArrayList<String> execute()
    }

    class RemoveById {
        + RemoveById(String name, String description)
        + ArrayList<String> execute()
    }

    class RemoveFirst {
        + RemoveFirst(String name, String description)
        + ArrayList<String> execute()
    }

    class RemoveHead {
        + RemoveHead(String name, String description)
        + ArrayList<String> execute()
    }

    class RemoveLower {
        + RemoveLower(String name, String description)
        + ArrayList<String> execute()
    }

    class Save {
        + Save(String name, String description)
        + ArrayList<String> execute()
    }

    class Show {
        + Show(String name, String description)
        + ArrayList<String> execute()
    }

    class UpdateById {
        + UpdateById(String name, String description)
        + ArrayList<String> execute()
    }

    Command <|-down--- Add
    Command <|-down--- Clear
    Command <|-down--- CountLessThanEnginePower
    Command <|-down--- ExecuteScript
    Command <|-down--- Exit
    Command <|-down--- FilterGreaterThanFuelConsumption
    Command <|-down--- FilterStartsWithName
    Command <|-down--- Help
    Command <|-up--- Info
    Command <|-up--- RemoveById
    Command <|-up--- RemoveFirst
    Command <|-up--- RemoveHead
    Command <|-up--- RemoveLower
    Command <|-up--- Save
    Command <|-up--- Show
    Command <|-up--- UpdateById
}

@enduml